version: '3.8'
services:
  frontend:
    build: ./frontend
    container_name: frontend-service
    ports:
      - "3000:80"
    environment:
      BACKEND_URL: http://backend:5000
      DATABASE_URL: http://database:5432
    depends_on:
      - backend
      - database
  backend:
    build: ./backend
    container_name: backend-service
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgresql://user:password@database:5432/appdb
      REDIS_URL: redis://cache:6379
    depends_on:
      - database
      - cache
  database:
    image: postgres:13
    container_name: database-service
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=appdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  cache:
    image: redis:6
    container_name: cache-service
    ports:
      - "6379:6379"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-incident
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--alertmanager.url=http://alertmanager:9093'
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-incident
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-storage:/var/lib/grafana

  incident-handler:
    build:
      context: .
      dockerfile: incident-handler.Dockerfile
    container_name: incident-handler
    ports:
      - "5001:5001"

volumes:
  postgres_data:
  grafana-storage: